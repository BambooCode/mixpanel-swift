{"Typealiases.html#/Properties":{"name":"Properties"},"Protocols/MixpanelType.html#/isValidNestedTypeAndValue()":{"name":"isValidNestedTypeAndValue()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.</p>","parent_name":"MixpanelType"},"Protocols/MixpanelType.html#/equals(rhs:)":{"name":"equals(rhs:)","parent_name":"MixpanelType"},"Protocols/MixpanelDelegate.html#/mixpanelWillFlush(_:)":{"name":"mixpanelWillFlush(_:)","abstract":"<p>Asks the delegate if data should be uploaded to the server.</p>","parent_name":"MixpanelDelegate"},"Protocols/MixpanelDelegate.html":{"name":"MixpanelDelegate","abstract":"<p>Delegate protocol for controlling the Mixpanel API&rsquo;s network behavior.</p>"},"Protocols/MixpanelType.html":{"name":"MixpanelType","abstract":"<p>Property keys must be String objects and the supported value types need to conform to MixpanelType."},"Extensions/Dictionary.html#/isValidNestedTypeAndValue()":{"name":"isValidNestedTypeAndValue()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.</p>","parent_name":"Dictionary"},"Extensions/Dictionary.html#/equals(rhs:)":{"name":"equals(rhs:)","parent_name":"Dictionary"},"Extensions/NSArray.html#/isValidNestedTypeAndValue()":{"name":"isValidNestedTypeAndValue()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.</p>","parent_name":"NSArray"},"Extensions/NSArray.html#/equals(rhs:)":{"name":"equals(rhs:)","parent_name":"NSArray"},"Extensions/Array.html#/isValidNestedTypeAndValue()":{"name":"isValidNestedTypeAndValue()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.</p>","parent_name":"Array"},"Extensions/Array.html#/equals(rhs:)":{"name":"equals(rhs:)","parent_name":"Array"},"Extensions/NSNull.html#/isValidNestedTypeAndValue()":{"name":"isValidNestedTypeAndValue()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"NSNull"},"Extensions/NSNull.html#/equals(rhs:)":{"name":"equals(rhs:)","parent_name":"NSNull"},"Extensions/URL.html#/isValidNestedTypeAndValue()":{"name":"isValidNestedTypeAndValue()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"URL"},"Extensions/URL.html#/equals(rhs:)":{"name":"equals(rhs:)","parent_name":"URL"},"Extensions/Date.html#/isValidNestedTypeAndValue()":{"name":"isValidNestedTypeAndValue()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"Date"},"Extensions/Date.html#/equals(rhs:)":{"name":"equals(rhs:)","parent_name":"Date"},"Extensions/Bool.html#/isValidNestedTypeAndValue()":{"name":"isValidNestedTypeAndValue()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"Bool"},"Extensions/Bool.html#/equals(rhs:)":{"name":"equals(rhs:)","parent_name":"Bool"},"Extensions/Float.html#/isValidNestedTypeAndValue()":{"name":"isValidNestedTypeAndValue()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"Float"},"Extensions/Float.html#/equals(rhs:)":{"name":"equals(rhs:)","parent_name":"Float"},"Extensions/Double.html#/isValidNestedTypeAndValue()":{"name":"isValidNestedTypeAndValue()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"Double"},"Extensions/Double.html#/equals(rhs:)":{"name":"equals(rhs:)","parent_name":"Double"},"Extensions/UInt.html#/isValidNestedTypeAndValue()":{"name":"isValidNestedTypeAndValue()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"UInt"},"Extensions/UInt.html#/equals(rhs:)":{"name":"equals(rhs:)","parent_name":"UInt"},"Extensions/Int.html#/isValidNestedTypeAndValue()":{"name":"isValidNestedTypeAndValue()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"Int"},"Extensions/Int.html#/equals(rhs:)":{"name":"equals(rhs:)","parent_name":"Int"},"Extensions/NSNumber.html#/isValidNestedTypeAndValue()":{"name":"isValidNestedTypeAndValue()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"NSNumber"},"Extensions/NSNumber.html#/equals(rhs:)":{"name":"equals(rhs:)","parent_name":"NSNumber"},"Extensions/NSString.html#/isValidNestedTypeAndValue()":{"name":"isValidNestedTypeAndValue()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"NSString"},"Extensions/NSString.html#/equals(rhs:)":{"name":"equals(rhs:)","parent_name":"NSString"},"Extensions/String.html#/isValidNestedTypeAndValue()":{"name":"isValidNestedTypeAndValue()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"String"},"Extensions/String.html#/equals(rhs:)":{"name":"equals(rhs:)","parent_name":"String"},"Extensions/Optional.html#/isValidNestedTypeAndValue()":{"name":"isValidNestedTypeAndValue()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.</p>","parent_name":"Optional"},"Extensions/Optional.html#/equals(rhs:)":{"name":"equals(rhs:)","parent_name":"Optional"},"Extensions/Optional.html":{"name":"Optional"},"Extensions/String.html":{"name":"String"},"Extensions/NSString.html":{"name":"NSString"},"Extensions/NSNumber.html":{"name":"NSNumber"},"Extensions/Int.html":{"name":"Int"},"Extensions/UInt.html":{"name":"UInt"},"Extensions/Double.html":{"name":"Double"},"Extensions/Float.html":{"name":"Float"},"Extensions/Bool.html":{"name":"Bool"},"Extensions/Date.html":{"name":"Date"},"Extensions/URL.html":{"name":"URL"},"Extensions/NSNull.html":{"name":"NSNull"},"Extensions/Array.html":{"name":"Array"},"Extensions/NSArray.html":{"name":"NSArray"},"Extensions/Dictionary.html":{"name":"Dictionary"},"Classes/People.html#/ignoreTime":{"name":"ignoreTime","abstract":"<p>controls the $ignore_time property in any subsequent MixpanelPeople operation.","parent_name":"People"},"Classes/People.html#/set(properties:)":{"name":"set(properties:)","abstract":"<p>Set properties on the current user in Mixpanel People.</p>","parent_name":"People"},"Classes/People.html#/set(property:to:)":{"name":"set(property:to:)","abstract":"<p>Convenience method for setting a single property in Mixpanel People.</p>","parent_name":"People"},"Classes/People.html#/setOnce(properties:)":{"name":"setOnce(properties:)","abstract":"<p>Set properties on the current user in Mixpanel People, but doesn&rsquo;t overwrite if","parent_name":"People"},"Classes/People.html#/unset(properties:)":{"name":"unset(properties:)","abstract":"<p>Remove a list of properties and their values from the current user&rsquo;s profile","parent_name":"People"},"Classes/People.html#/increment(properties:)":{"name":"increment(properties:)","abstract":"<p>Increment the given numeric properties by the given values.</p>","parent_name":"People"},"Classes/People.html#/increment(property:by:)":{"name":"increment(property:by:)","abstract":"<p>Convenience method for incrementing a single numeric property by the specified","parent_name":"People"},"Classes/People.html#/append(properties:)":{"name":"append(properties:)","abstract":"<p>Append values to list properties.</p>","parent_name":"People"},"Classes/People.html#/remove(properties:)":{"name":"remove(properties:)","abstract":"<p>Removes list properties.</p>","parent_name":"People"},"Classes/People.html#/union(properties:)":{"name":"union(properties:)","abstract":"<p>Union list properties.</p>","parent_name":"People"},"Classes/People.html#/trackCharge(amount:properties:)":{"name":"trackCharge(amount:properties:)","abstract":"<p>Track money spent by the current user for revenue analytics and associate","parent_name":"People"},"Classes/People.html#/clearCharges()":{"name":"clearCharges()","abstract":"<p>Delete current user&rsquo;s revenue history.</p>","parent_name":"People"},"Classes/People.html#/deleteUser()":{"name":"deleteUser()","abstract":"<p>Delete current user&rsquo;s record from Mixpanel People.</p>","parent_name":"People"},"Classes/MixpanelInstance.html#/apiToken":{"name":"apiToken","abstract":"<p>apiToken string that identifies the project to track data to</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/delegate":{"name":"delegate","abstract":"<p>The a MixpanelDelegate object that gives control over Mixpanel network activity.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/distinctId":{"name":"distinctId","abstract":"<p>distinctId string that uniquely identifies the current user.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/anonymousId":{"name":"anonymousId","abstract":"<p>anonymousId string that uniquely identifies the device.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/userId":{"name":"userId","abstract":"<p>userId string that identify is called with.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/hadPersistedDistinctId":{"name":"hadPersistedDistinctId","abstract":"<p>hadPersistedDistinctId is a boolean value which specifies that the stored distinct_id","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/alias":{"name":"alias","abstract":"<p>alias string that uniquely identifies the current user.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/people":{"name":"people","abstract":"<p>Accessor to the Mixpanel People API object.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/showNetworkActivityIndicator":{"name":"showNetworkActivityIndicator","abstract":"<p>Controls whether to show spinning network activity indicator when flushing","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/trackAutomaticEventsEnabled":{"name":"trackAutomaticEventsEnabled","abstract":"<p>This allows enabling or disabling collecting common mobile events,</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/flushInterval":{"name":"flushInterval","abstract":"<p>Flush timer&rsquo;s interval.","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/flushOnBackground":{"name":"flushOnBackground","abstract":"<p>Control whether the library should flush data to Mixpanel when the app","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/useIPAddressForGeoLocation":{"name":"useIPAddressForGeoLocation","abstract":"<p>Controls whether to automatically send the client IP Address as part of","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/serverURL":{"name":"serverURL","abstract":"<p>The base URL used for Mixpanel API requests.","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/debugDescription":{"name":"debugDescription","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/loggingEnabled":{"name":"loggingEnabled","abstract":"<p>This allows enabling or disabling of all Mixpanel logs at run time.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/name":{"name":"name","abstract":"<p>A unique identifier for this MixpanelInstance</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/minimumSessionDuration":{"name":"minimumSessionDuration","abstract":"<p>The minimum session duration (ms) that is tracked in automatic events.","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/maximumSessionDuration":{"name":"maximumSessionDuration","abstract":"<p>The maximum session duration (ms) that is tracked in automatic events.","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/identify(distinctId:usePeople:completion:)":{"name":"identify(distinctId:usePeople:completion:)","abstract":"<p>Sets the distinct ID of the current user.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/createAlias(_:distinctId:usePeople:andIdentify:completion:)":{"name":"createAlias(_:distinctId:usePeople:andIdentify:completion:)","abstract":"<p>The alias method creates an alias which Mixpanel will use to remap one id to another.","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/reset(completion:)":{"name":"reset(completion:)","abstract":"<p>Clears all stored properties including the distinct Id.","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/archive()":{"name":"archive()","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/flush(performFullFlush:completion:)":{"name":"flush(performFullFlush:completion:)","abstract":"<p>Uploads queued data to the Mixpanel server.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/track(event:properties:)":{"name":"track(event:properties:)","abstract":"<p>Tracks an event with properties.","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/trackWithGroups(event:properties:groups:)":{"name":"trackWithGroups(event:properties:groups:)","abstract":"<p>Tracks an event with properties and to specific groups.","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/getGroup(groupKey:groupID:)":{"name":"getGroup(groupKey:groupID:)","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/time(event:)":{"name":"time(event:)","abstract":"<p>Starts a timer that will be stopped and added as a property when a","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/eventElapsedTime(event:)":{"name":"eventElapsedTime(event:)","abstract":"<p>Retrieves the time elapsed for the named event since time(event:) was called.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/clearTimedEvents()":{"name":"clearTimedEvents()","abstract":"<p>Clears all current event timers.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/clearTimedEvent(event:)":{"name":"clearTimedEvent(event:)","abstract":"<p>Clears the event timer for the named event.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/currentSuperProperties()":{"name":"currentSuperProperties()","abstract":"<p>Returns the currently set super properties.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/clearSuperProperties()":{"name":"clearSuperProperties()","abstract":"<p>Clears all currently set super properties.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/registerSuperProperties(_:)":{"name":"registerSuperProperties(_:)","abstract":"<p>Registers super properties, overwriting ones that have already been set.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/registerSuperPropertiesOnce(_:defaultValue:)":{"name":"registerSuperPropertiesOnce(_:defaultValue:)","abstract":"<p>Registers super properties without overwriting ones that have already been set,","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/unregisterSuperProperty(_:)":{"name":"unregisterSuperProperty(_:)","abstract":"<p>Removes a previously registered super property.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/setGroup(groupKey:groupID:)":{"name":"setGroup(groupKey:groupID:)","abstract":"<p>Convenience method to set a single group the user belongs to.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/setGroup(groupKey:groupIDs:)":{"name":"setGroup(groupKey:groupIDs:)","abstract":"<p>Set the groups this user belongs to.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/addGroup(groupKey:groupID:)":{"name":"addGroup(groupKey:groupID:)","abstract":"<p>Add a group to this user&rsquo;s membership for a particular group key</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/removeGroup(groupKey:groupID:)":{"name":"removeGroup(groupKey:groupID:)","abstract":"<p>Remove a group from this user&rsquo;s membership for a particular group key</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/optOutTracking()":{"name":"optOutTracking()","abstract":"<p>Opt out tracking.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/optInTracking(distinctId:properties:)":{"name":"optInTracking(distinctId:properties:)","abstract":"<p>Opt in tracking.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/hasOptedOutTracking()":{"name":"hasOptedOutTracking()","abstract":"<p>Returns if the current user has opted out tracking.</p>","parent_name":"MixpanelInstance"},"Classes/Mixpanel.html#/initialize(token:trackAutomaticEvents:flushInterval:instanceName:optOutTrackingByDefault:useUniqueDistinctId:superProperties:serverURL:)":{"name":"initialize(token:trackAutomaticEvents:flushInterval:instanceName:optOutTrackingByDefault:useUniqueDistinctId:superProperties:serverURL:)","abstract":"<p>Initializes an instance of the API with the given project token.</p>","parent_name":"Mixpanel"},"Classes/Mixpanel.html#/initialize(token:flushInterval:instanceName:optOutTrackingByDefault:useUniqueDistinctId:superProperties:serverURL:)":{"name":"initialize(token:flushInterval:instanceName:optOutTrackingByDefault:useUniqueDistinctId:superProperties:serverURL:)","abstract":"<p>Initializes an instance of the API with the given project token (MAC OS ONLY).</p>","parent_name":"Mixpanel"},"Classes/Mixpanel.html#/getInstance(name:)":{"name":"getInstance(name:)","abstract":"<p>Gets the mixpanel instance with the given name</p>","parent_name":"Mixpanel"},"Classes/Mixpanel.html#/mainInstance()":{"name":"mainInstance()","abstract":"<p>Returns the main instance that was initialized.</p>","parent_name":"Mixpanel"},"Classes/Mixpanel.html#/setMainInstance(name:)":{"name":"setMainInstance(name:)","abstract":"<p>Sets the main instance based on the instance name</p>","parent_name":"Mixpanel"},"Classes/Mixpanel.html#/removeInstance(name:)":{"name":"removeInstance(name:)","abstract":"<p>Removes an unneeded Mixpanel instance based on its name</p>","parent_name":"Mixpanel"},"Classes/Group.html#/set(properties:)":{"name":"set(properties:)","abstract":"<p>Sets properties on this group.</p>","parent_name":"Group"},"Classes/Group.html#/set(property:to:)":{"name":"set(property:to:)","abstract":"<p>Convenience method for setting a single property in Mixpanel Groups.</p>","parent_name":"Group"},"Classes/Group.html#/setOnce(properties:)":{"name":"setOnce(properties:)","abstract":"<p>Sets properties on the current Mixpanel Group, but doesn&rsquo;t overwrite if","parent_name":"Group"},"Classes/Group.html#/unset(property:)":{"name":"unset(property:)","abstract":"<p>Remove a property and its value from a group&rsquo;s profile in Mixpanel Groups.</p>","parent_name":"Group"},"Classes/Group.html#/remove(key:value:)":{"name":"remove(key:value:)","abstract":"<p>Removes list properties.</p>","parent_name":"Group"},"Classes/Group.html#/union(key:values:)":{"name":"union(key:values:)","abstract":"<p>Union list properties.</p>","parent_name":"Group"},"Classes/Group.html#/deleteGroup()":{"name":"deleteGroup()","abstract":"<p>Delete group&rsquo;s record from Mixpanel Groups.</p>","parent_name":"Group"},"Classes/Group.html":{"name":"Group","abstract":"<p>Access to the Mixpanel Groups API, available through the getGroup function from"},"Classes/Mixpanel.html":{"name":"Mixpanel","abstract":"<p>The primary class for integrating Mixpanel with your app.</p>"},"Classes/MixpanelInstance.html":{"name":"MixpanelInstance","abstract":"<p>The class that represents the Mixpanel Instance</p>"},"Classes/People.html":{"name":"People","abstract":"<p>Access to the Mixpanel People API, available as an accessible variable from"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}